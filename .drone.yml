kind: pipeline
type: docker
name: frontend

steps:
  - name: Checkout to the repository
    image: alpine/git
    commands:
      - git clone --depth=1 "${DRONE_REPO_LINK}"
      - .cicd/scripts/must_continue_pipeline.sh web

  - name: Install Dependencies
    image: node:23-alpine
    depends_on:
      - Checkout to the repository
    commands:
      - npm --prefix=web install

  - name: Running Tests
    image: node:23-alpine
    depends_on:
      - Install Dependencies
    commands:
      - npm --prefix=web run test

  - name: Building
    image: plugins/docker
    privileged: true
    depends_on:
      - Running Tests
    settings:
      registry: ghcr.io
      repo: ghcr.io/jspereiramoura/habit-tracker/web
      dockerfile: web/.docker/Dockerfile
      context: web
      build_args_from_env:
        from_secret: ENV_CONTENT
      username:
        from_secret: GITHUB_USERNAME
      password:
        from_secret: GITHUB_TOKEN
      tags:
        - latest
        - ${DRONE_COMMIT_SHA:0:7}
    
  - name: Deploy
    image: curlimages/curl
    depends_on:
      - Building
    environment:
      DASHBOARD:
        from_secret: DASHBOARD
      DEPLOY_TOKEN:
        from_secret: DEPLOY_TOKEN
      APPLICATION_ID_WEB:
        from_secret: APPLICATION_ID_WEB
    commands:
      - >
        curl -X POST "http://$DASHBOARD/api/application.deploy" -H "accept: application/json" -H "Content-Type: application/json" -H "x-api-key: $DEPLOY_TOKEN" -d "{\"applicationId\":\"$APPLICATION_ID_WEB\"}" 

  - name: Send Telegram Notification
    image: appleboy/drone-telegram
    when:
      status:
        - success
        - failure
    depends_on:
      - Deploy
    settings:
      token:
        from_secret: TELEGRAM_TOKEN
      to:
        from_secret: TELEGRAM_ID
      message_file: .cicd/message_file.tpl
      template_vars:
        env: "production"
        app: "Owl Habit Tracker - Frontend"
        url: https://apps.habits.jspereiramoura.dev.br

---

kind: pipeline
type: docker
name: api

steps:
  - name: Checkout to the repository
    image: alpine/git
    commands:
      - git clone --depth=1 "${DRONE_REPO_LINK}"
      - .cicd/scripts/must_continue_pipeline.sh api

  - name: Install Dependencies
    image: node:23-alpine
    depends_on:
      - Checkout to the repository
    commands:
      - npm --prefix=api install

  - name: Running Tests
    image: node:23-alpine
    depends_on:
      - Install Dependencies
    commands:
      - npm --prefix=api run test

  - name: Building
    image: plugins/docker
    privileged: true
    depends_on:
      - Running Tests
    settings:
      registry: ghcr.io
      repo: ghcr.io/jspereiramoura/habit-tracker/api
      dockerfile: api/.docker/Dockerfile
      context: api
      username:
        from_secret: GITHUB_USERNAME
      password:
        from_secret: GITHUB_TOKEN
      tags:
        - latest
        - ${DRONE_COMMIT_SHA:0:7}
    
  - name: Deploy
    image: curlimages/curl
    depends_on:
      - Building
    environment:
      DASHBOARD:
        from_secret: DASHBOARD
      DEPLOY_TOKEN:
        from_secret: DEPLOY_TOKEN
      APPLICATION_ID_API:
        from_secret: APPLICATION_ID_API
    commands:
      - >
        curl -X POST "http://$DASHBOARD/api/application.redeploy" -H "accept: application/json" -H "Content-Type: application/json" -H "x-api-key: $DEPLOY_TOKEN" -d "{\"applicationId\":\"$APPLICATION_ID_API\"}" 

  - name: Send Telegram Notification
    image: appleboy/drone-telegram
    depends_on:
      - Deploy
    when:
      status:
        - success
        - failure
    settings:
      token:
        from_secret: TELEGRAM_TOKEN
      to:
        from_secret: TELEGRAM_ID
      message_file: .cicd/message_file.tpl
      template_vars:
        env: "production"
        app: "Owl Habit Tracker - API"
        url: https://api.habits.jspereiramoura.dev.br/swagger

trigger:
  branch:
    - main
